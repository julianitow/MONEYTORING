<?php

namespace ApplicationBundle\Repository;
use Doctrine\ORM\NoResultException;

/**
 * fractionRepository
 *
 * This class was generated by the Doctrine ORM. Add your own custom
 * repository methods below.
 */
class FractionRepository extends \Doctrine\ORM\EntityRepository
{
	public function findByUserID($id)
	{
		$qb = $this->_em->createQueryBuilder('f');

		$nom = "Budget Restant";

		$qb -> select('f')
				->from('ApplicationBundle:Fraction', 'f')
				->where('f.utilisateur = :id')
				->andWhere('f.nom not like :nom')
				->setParameter('id', $id)
				->setParameter('nom', $nom)
				;

		$requete = $qb->getQuery();

		try
		{
			$result = $requete->getResult();
		}
		catch (\Doctrine\ORM\NoResultException $e)
		{
			$result = "NoResultException";
		}

		return $result;
	}

	public function findAllByUserID($id)
	{
		$nom = "Budget Restant";
		$qb = $this->_em->createQueryBuilder('f');

		$qb -> select('f')
				->from('ApplicationBundle:Fraction', 'f')
				->where('f.utilisateur = :id')
				->andWhere('f.nom not like :nom')
				->setParameter('id', $id)
				->setParameter('nom', $nom);
		return $qb;
	}

	public function findBudgetRestant($id)
	{
		$nom = "Budget Restant";
		$qb = $this->_em->createQueryBuilder('f');

		$qb -> select('f')
				->from('ApplicationBundle:Fraction', 'f')
				->where('f.utilisateur = :id')
				->andWhere('f.nom like :nom')
				->setParameter('id', $id)
				->setParameter('nom', $nom);
				$requete = $qb->getQuery();

				try
				{
					$result = $requete->getSingleResult();
				}
				catch (\Doctrine\ORM\NoResultException $e)
				{
					$result = "NoResultException";
				}

				return $result;
	}

}
